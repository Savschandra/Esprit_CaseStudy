# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven
 
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
 
jobs:
  build:
   runs-on: [self-hosted,linux,x64,insights]
   steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'maven'
      - name: Set up virtual X11
        run: sudo apt-get install xvfb
      - name: Start virtual frame buffer
        run: Xvfb :19 -screen 0 1024x768x16 &

      - name: Build with Offline dependencies Maven
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_APIKEY: ${{ secrets.ARTIFACTORY_APIKEY }}

        run: mvn -s .github/workflows/settings.xml --batch-mode dependency:go-offline

      - name: Build with Maven
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_APIKEY: ${{ secrets.ARTIFACTORY_APIKEY }}
        run: mvn -s .github/workflows/settings.xml --batch-mode clean install

      - name: Deploy with Maven
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_APIKEY: ${{ secrets.ARTIFACTORY_APIKEY }}
        run: mvn -s .github/workflows/settings.xml -DskipTests deploy
 
      - name: Build with Maven
      #run: mvn --file pom.xml -Pcodecoverage -B package "-Djava.awt.headless=true"  
        run: mvn --file pom.xml -Pcodecoverage -B package "-Djava.awt.headless=true"
        env:
           DISPLAY: :19
           CUCUMBER_PUBLISH_TOKEN: 12345678-1234-1234-1234-123456789123

